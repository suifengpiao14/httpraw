// Code generated by 'yaegi extract github.com/suifengpiao14/httpraw'. DO NOT EDIT.

package curlhookyaegi

import (
	"github.com/suifengpiao14/httpraw"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["github.com/suifengpiao14/httpraw/httpraw"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"BuildRequest":            reflect.ValueOf(httpraw.BuildRequest),
		"CURL_TIMEOUT":            reflect.ValueOf(&httpraw.CURL_TIMEOUT).Elem(),
		"CurrentTime":             reflect.ValueOf(httpraw.CurrentTime),
		"DefaultPrintHttpLogInfo": reflect.ValueOf(httpraw.DefaultPrintHttpLogInfo),
		"DestructReqeust":         reflect.ValueOf(httpraw.DestructReqeust),
		"Fen2yuan":                reflect.ValueOf(httpraw.Fen2yuan),
		"FomrmatHttpRaw":          reflect.ValueOf(httpraw.FomrmatHttpRaw),
		"GetMD5LOWER":             reflect.ValueOf(httpraw.GetMD5LOWER),
		"HTTP_HEAD_BODY_DELIM":    reflect.ValueOf(constant.MakeFromLiteral("\"\\r\\n\\r\\n\"", token.STRING, 0)),
		"JsonCompact":             reflect.ValueOf(httpraw.JsonCompact),
		"LOG_INFO_CURL_RAW":       reflect.ValueOf(httpraw.LOG_INFO_CURL_RAW),
		"Linux_EOF":               reflect.ValueOf(constant.MakeFromLiteral("\"\\n\"", token.STRING, 0)),
		"LogInfoNameHttp":         reflect.ValueOf(httpraw.LogInfoNameHttp),
		"NewDynamicCURLHook":      reflect.ValueOf(httpraw.NewDynamicCURLHook),
		"NewHttpProxy":            reflect.ValueOf(httpraw.NewHttpProxy),
		"NewHttpTpl":              reflect.ValueOf(httpraw.NewHttpTpl),
		"NewTransport":            reflect.ValueOf(httpraw.NewTransport),
		"ParseResponse":           reflect.ValueOf(httpraw.ParseResponse),
		"PermanentTime":           reflect.ValueOf(httpraw.PermanentTime),
		"ReadRequest":             reflect.ValueOf(httpraw.ReadRequest),
		"RestyRequestFn":          reflect.ValueOf(httpraw.RestyRequestFn),
		"TemplatefuncMap":         reflect.ValueOf(&httpraw.TemplatefuncMap).Elem(),
		"TimestampSecond":         reflect.ValueOf(httpraw.TimestampSecond),
		"Window_EOF":              reflect.ValueOf(constant.MakeFromLiteral("\"\\r\\n\"", token.STRING, 0)),
		"WithDefault":             reflect.ValueOf(httpraw.WithDefault),
		"WithEmptyStr":            reflect.ValueOf(httpraw.WithEmptyStr),
		"WithZeroNumber":          reflect.ValueOf(httpraw.WithZeroNumber),
		"Xid":                     reflect.ValueOf(httpraw.Xid),
		"ZeroTime":                reflect.ValueOf(httpraw.ZeroTime),

		// type definitions
		"AfterFn":         reflect.ValueOf((*httpraw.AfterFn)(nil)),
		"BeforeFn":        reflect.ValueOf((*httpraw.BeforeFn)(nil)),
		"CURLHookI":       reflect.ValueOf((*httpraw.CURLHookI)(nil)),
		"DynamicCURLHook": reflect.ValueOf((*httpraw.DynamicCURLHook)(nil)),
		"HttpProxy":       reflect.ValueOf((*httpraw.HttpProxy)(nil)),
		"LogInfoCURLRaw":  reflect.ValueOf((*httpraw.LogInfoCURLRaw)(nil)),
		"LogInfoHttp":     reflect.ValueOf((*httpraw.LogInfoHttp)(nil)),
		"LogName":         reflect.ValueOf((*httpraw.LogName)(nil)),
		
		"RequestFn":       reflect.ValueOf((*httpraw.RequestFn)(nil)),
		"ResponseDTO":     reflect.ValueOf((*httpraw.ResponseDTO)(nil)),
		"TransportConfig": reflect.ValueOf((*httpraw.TransportConfig)(nil)),

		// interface wrapper definitions
		"_CURLHookI": reflect.ValueOf((*_github_com_suifengpiao14_httpraw_CURLHookI)(nil)),
	}
}

// _github_com_suifengpiao14_httpraw_CURLHookI is an interface wrapper for CURLHookI type
type _github_com_suifengpiao14_httpraw_CURLHookI struct {
	IValue    interface{}
	WAfterFn  func(body []byte, scriptData map[string]interface{}) (newBody []byte, err error)
	WBeforeFn func(r httpraw.RequestDTO, scriptData map[string]interface{}) (nr *httpraw.RequestDTO, err error)
}

func (W _github_com_suifengpiao14_httpraw_CURLHookI) AfterFn(body []byte, scriptData map[string]interface{}) (newBody []byte, err error) {
	return W.WAfterFn(body, scriptData)
}
func (W _github_com_suifengpiao14_httpraw_CURLHookI) BeforeFn(r httpraw.RequestDTO, scriptData map[string]interface{}) (nr *httpraw.RequestDTO, err error) {
	return W.WBeforeFn(r, scriptData)
}
